// For format details, see https://aka.ms/devcontainer.json. For config options, see the
// README at: https://github.com/devcontainers/templates/tree/main/src/python
{
	"name": "Python 3",
	// Or use a Dockerfile or Docker Compose file. More info: https://containers.dev/guide/dockerfile
	//"image": "mcr.microsoft.com/devcontainers/python:1-3.12-bullseye"
	"build": {
		// Path is relative to the devcontainer.json file.
		"dockerfile": "Dockerfile",
		// Allows container to see the rootdir, where the requirements.txt is
		"context": ".."
		//"args": {
		//	"--ssh": "${localEnv:SSH_AUTH_SOCK}"
		//}
	},
	

	// allows GPU access to the container
	"runArgs": [
		"--gpus", "all"
	],

	//"runArgs": [
	//	"--gpus", "all",
	//	"--mount", "type=bind,source=${localEnv:SSH_AUTH_SOCK}/.ssh,target=/ssh-agent",
	//	"--env", "SSH_AUTH_SOCK=/agent-socket"
	//]

	// When using remote-ssh to connect to a remote machine, vscode uses the local (laptop)
	// SSH_AUTH_SOCK as a source for ssh keys, so we need to use bind mounts to
	// mounts local .ssh inside the container, hoping that the remote server ssh key is finally used...
	// works, but really unsafe work around if more people have access to the same machine...
	"mounts": [
		"type=bind,source=${localEnv:HOME}/.ssh,target=/home/vscode/.ssh,readonly"
	]
	
	// add black formatter
	// Features to add to the dev container. More info: https://containers.dev/features.
	// "features": {},

	// Use 'forwardPorts' to make a list of ports inside the container available locally.
	// "forwardPorts": [],

	// Use 'postCreateCommand' to run commands after the container is created.
	// "postCreateCommand": "pip3 install --user -r requirements.txt",

	// Configure tool-specific properties.
	// "customizations": {},

	// Uncomment to connect as root instead. More info: https://aka.ms/dev-containers-non-root.
	// "remoteUser": "root"
}
